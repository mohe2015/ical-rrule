name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  CARGO_INCREMENTAL: 0

jobs:
  rust:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      shell: bash
    - uses: actions/cache@v2
      with:
        path: |
          /usr/share/rust/.rustup/
          /usr/share/rust/.cargo/
          target/
        key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy, llvm-tools-preview
    - name: Cargo install
      run: cargo install cargo-binutils rustfilt
    - name: Run cargo fmt
      run: cargo fmt -- --check
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - name: cargo build test
      id: build-test
      env:
        RUSTFLAGS: '-Z instrument-coverage'
      run: echo "::set-output name=binary::$(cargo test --no-run --message-format=json | jq -r "select(.profile.test == true) | .filenames[]")"
    - name: cargo test
      run: ${{ steps.build-test.outputs.binary }}
    - name: cargo profdata
      run: cargo profdata -- merge -sparse default.profraw -o default.profdata
    - name: coverage
      run: cargo cov -- show --ignore-filename-regex='(/.cargo/registry)|(/rustc/)' --instr-profile=default.profdata --object ${{ steps.build-test.outputs.binary }} --show-instantiations --show-line-counts-or-regions --Xdemangler=rustfilt
    - name: coverage summary
      id: coverage
      # https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions
      run: cargo cov -- report --ignore-filename-regex='(/.cargo/registry)|(/rustc/)' --instr-profile=default.profdata --object ${{ steps.build-test.outputs.binary }} > coverage-result.txt
    - name: coverage html
      run: cargo cov -- show --format=html --ignore-filename-regex='(/.cargo/registry)|(/rustc/)' --instr-profile=default.profdata --object ${{ steps.build-test.outputs.binary }} --output-dir=target/debug/coverage --show-instantiations --show-line-counts-or-regions --Xdemangler=rustfilt
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: target/debug/coverage
    - uses: actions/github-script@v5
      # https://github.com/actions/github-script
      # https://docs.github.com/en/actions/learn-github-actions/contexts
      #env:
      #  COVERAGE_SUMMARY: ${{ steps.coverage.outputs.summary }}
      with:
        script: |
          const fs = require('fs')
          //const { COVERAGE_SUMMARY } = process.env
          const data = fs.readFileSync('coverage-result.txt', 'utf8')

          //console.log(`${COVERAGE_SUMMARY}`)

          console.log(await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "```\n" + data + "```"
          }))

          console.log(await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: "Changes detected",
            head_sha: context.sha,
            status: 'in_progress',
            //conclusion: "action_required",
          }))